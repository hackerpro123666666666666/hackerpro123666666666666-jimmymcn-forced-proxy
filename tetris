<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tetris</title>
  <style>
    body { background: #111; color: #fff; display: flex; flex-direction: column; align-items: center; font-family: monospace; }
    #board { background: #222; border: 2px solid #4f8cff; margin: 1em; display: grid; grid-template-rows: repeat(20, 20px); grid-template-columns: repeat(10, 20px);}
    .cell { width: 20px; height: 20px; box-sizing: border-box; border: 1px solid #333;}
    h1 { margin: 0.5em 0; }
    #score { font-size: 1.2em; }
  </style>
</head>
<body>
  <h1>Tetris</h1>
  <div id="score">Score: 0</div>
  <div id="board"></div>
  <script>
// Simple Tetris implementation (one file, minimal)
const ROWS = 20, COLS = 10;
const COLORS = ["#000","#0ff","#00f","#f00","#ff0","#0f0","#f0f","#fa0"];
const SHAPES = [
  [],
  [[1,1,1,1]], // I
  [[2,2],[2,2]], // O
  [[0,3,0],[3,3,3]], // T
  [[0,4,4],[4,4,0]], // S
  [[5,5,0],[0,5,5]], // Z
  [[6,0,0],[6,6,6]], // J
  [[0,0,7],[7,7,7]]  // L
];
let board = Array.from({length:ROWS},()=>Array(COLS).fill(0));
let current, pos, score=0, interval, gameOver=false;
const boardDiv = document.getElementById('board'), scoreDiv=document.getElementById('score');
function draw() {
  boardDiv.innerHTML='';
  for(let r=0;r<ROWS;r++) for(let c=0;c<COLS;c++) {
    let div=document.createElement('div');
    div.className='cell';
    div.style.background = COLORS[board[r][c]];
    boardDiv.appendChild(div);
  }
  if(current) for(let r=0;r<current.length;r++) for(let c=0;c<current[0].length;c++)
    if(current[r][c]) {
      let idx = (pos[0]+r)*COLS+(pos[1]+c);
      if(idx>=0 && idx<ROWS*COLS)
        boardDiv.children[idx].style.background = COLORS[current[r][c]];
    }
}
function collision(p=pos,s=current) {
  for(let r=0;r<s.length;r++) for(let c=0;c<s[0].length;c++)
    if(s[r][c]&&(p[0]+r<0||p[0]+r>=ROWS||p[1]+c<0||p[1]+c>=COLS||board[p[0]+r][p[1]+c]))
      return true;
  return false;
}
function merge() {
  for(let r=0;r<current.length;r++) for(let c=0;c<current[0].length;c++)
    if(current[r][c]) board[pos[0]+r][pos[1]+c]=current[r][c];
}
function rotate(s) {
  return s[0].map((_,i)=>s.map(row=>row[i])).reverse();
}
function nextPiece() {
  let id = 1+Math.floor(Math.random()*7);
  current = SHAPES[id].map(row=>row.slice());
  pos = [0, Math.floor((COLS-current[0].length)/2)];
  if(collision()) { gameOver=true; clearInterval(interval); alert('Game Over!'); }
}
function removeLines() {
  let lines=0;
  for(let r=ROWS-1;r>=0;r--)
    if(board[r].every(v=>v)) { board.splice(r,1); board.unshift(Array(COLS).fill(0)); lines++; }
  score+=lines*100;
  scoreDiv.textContent = "Score: "+score;
}
function drop() {
  if(gameOver) return;
  let p = [pos[0]+1,pos[1]];
  if(!collision(p)) pos=p;
  else { merge(); removeLines(); nextPiece(); }
  draw();
}
function move(dir) {
  let p = [pos[0],pos[1]+dir];
  if(!collision(p)) pos=p;
  draw();
}
function rotatePiece() {
  let r = rotate(current);
  if(!collision(pos,r)) current=r;
  draw();
}
document.addEventListener('keydown',e=>{
  if(gameOver) return;
  if(e.key==='ArrowLeft') move(-1);
  else if(e.key==='ArrowRight') move(1);
  else if(e.key==='ArrowDown') drop();
  else if(e.key==='ArrowUp') rotatePiece();
});
function start() {
  nextPiece(); draw();
  interval=setInterval(drop,400);
}
for(let i=0;i<ROWS*COLS;i++) boardDiv.appendChild(document.createElement('div'));
start();
  </script>
</body>
</html>
